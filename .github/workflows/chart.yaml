name: Sync Charts

on:
  push:
    branches:
    - main
    - rc
    - dev
    - feature/*

env:
    IS_RELEASE: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
    IS_RC: ${{ github.ref == 'refs/heads/rc' }}
    IS_BETA: ${{ github.ref == 'refs/heads/dev' }}
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}

permissions:
  contents: write
  packages: write
  repository-projects: write
      
jobs:
  sync-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: SemVer 
        id: git-semver
        uses: codedesignplus/semver-git-version@v0.1.10
        with:
          folder: ${{github.workspace}}
          release-branch: 'main'
          release-candidate-branch: 'rc'
          beta-branch: 'dev'
          major-identifier: 'breaking'
          minor-identifier: 'feat' 
          prefix: 'v'
          dir-affected: ./
          previous-version: true
          new-version: true

      - name: Print Output
        id: output
        run: | 
            echo Previous Tag "${{ steps.git-semver.outputs.previous-tag }}"
            echo Previous Version "${{ steps.git-semver.outputs.previous-version }}"
            echo Previous Version Prefix "${{ steps.git-semver.outputs.previous-version-prefix }}"
            echo New Version "${{steps.git-semver.outputs.new-version}}"
            echo New Version Prefix "${{steps.git-semver.outputs.new-version-prefix}}"

      - name: Actualizar Chart.yaml
        run: |
            sed -i "s/^appVersion:.*/appVersion: ${{ steps.git-semver.outputs.new-version-prefix }}/" "${{ github.workspace }}/charts/ms-archetype/Chart.yaml"

      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          repository: codedesignplus/helm-charts
          ref: dev  # Cambia 'dev' por la rama donde quieres sincronizar
          path: helm-charts-repo
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-strict: true
          ssh-user: git
          fetch-depth: 10 # <--- AÃ±ade esto

      - name: Copy charts to destination repository
        run: |
          find charts -maxdepth 1 -type d -name "*" -exec cp -r {} helm-charts-repo/charts/ \;

      - name: Commit and push changes
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repoUrl = `git@github.com:codedesignplus/helm-charts.git`; // <- Url correcta.
            const branch = 'dev'; // Replace with your branch

            core.info('Changing directory to helm-charts-repo...');
            process.chdir('helm-charts-repo');

            core.info('Configuring git...');
            await exec.exec('git', ['config', 'user.name', 'github-actions[bot]']);
            await exec.exec('git', ['config', 'user.email', 'actions@github.com']);

            core.info('Changing remote origin to SSH...');
            await exec.exec('git', ['remote', 'set-url', 'origin', repoUrl]);

            core.info('Adding changes...');
            await exec.exec('git', ['add', '.']);

            core.info('Committing changes...');
            try {
              await exec.exec('git', ['commit', '-m', 'Sync charts from source repository']);
            } catch (error) {
              core.info('No changes to commit.');
              return; // Exit the script if there are no changes to commit
            }

            core.info('Pushing changes...');
            await exec.exec('git', ['push', 'origin', branch]);

      - name: Push tag
        id: push_tag
        if: env.IS_RELEASE == 'true' || env.IS_RC == 'true' || env.IS_BETA == 'true'
        uses: mathieudutour/github-tag-action@v6.1
        with:
            custom_tag: ${{ steps.git-semver.outputs.new-version }}
            github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Changelog
        if: env.IS_RELEASE == 'true' || env.IS_RC == 'true'
        uses: mikepenz/release-changelog-builder-action@v4
        with:
            configuration: "${{ github.workspace }}/.github/settings/configuration.json"          
            fromTag: ${{ steps.git-semver.outputs.previous-version-prefix }}
            toTag: ${{ steps.git-semver.outputs.new-version-prefix }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Create GitHub Release
        if: env.IS_RELEASE == 'true' || env.IS_RC == 'true'
        uses: mikepenz/action-gh-release@v1
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            tag_name: ${{ steps.git-semver.outputs.new-version-prefix }}
            name: "CodeDesignPlus.Net.Sdk@${{ steps.git-semver.outputs.new-version-prefix }}"
            body: ${{ steps.build_changelog.outputs.changelog }}
            prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'dev') }}